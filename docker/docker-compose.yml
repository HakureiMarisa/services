version: "3"

services:
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - "80:80"
      - "8090:8090"
      - "443:443"
    volumes:
      - "../nginx/conf.d:/etc/nginx/conf.d"
      - "../nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "../nginx/ssl/:/etc/nginx/cert/"
      - "../logs:/var/log/nginx"
      - "/vagrant/:/usr/share/www/"
    labels:
      aliyun.logs.stdout: stdout
      aliyun.logs.access: /var/log/nginx/*.log
  php73:
      container_name: php73
      build:
          context: php/php73
      working_dir: "/usr/share/www"
      init: true
      volumes:
        - "/vagrant/:/usr/share/www/"
        - "./php/php73/php-fpm.d/www.conf:/etc/php/7.3/fpm/pool.d/www.conf"
        - "./php/php73/php/php.ini:/etc/php/7.3/fpm/php.ini"
      # networks:
      #   default:
      #     ipv4_address: 172.18.0.8
  php80:
      container_name: php80
      build:
        context: php/php80
      working_dir: "/usr/share/www"
      volumes:
        - "/vagrant/:/usr/share/www/"
        - "./php/php80/php-fpm.d/www.conf:/etc/php/8.0/fpm/pool.d/www.conf"
        - "./php/php80/php/php.ini:/etc/php/8.0/fpm/php.ini"
  # redis:
  #   container_name: redis
  #   image: redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #       - "../redis/redis.conf:/usr/local/etc/redis/redis.conf"
  # redis-stat:
  #   image: insready/redis-stat
  #   ports:
  #     - "63790:63790"
  #   command: --server redis
  # rabbitmq:
  #   container_name: rabbitmq
  #   build:
  #       context: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  # mysql:
  #   container_name: mysql
  #   image: mysql:8
  #   user: 1000:1000
  #   command: --innodb-use-native-aio=0
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - "../storage/mysql8:/var/lib/mysql"
  #     - "./mysql/conf.d/docker.conf:/etc/mysql/conf.d/docker.cnf"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: wh10t#p
  # log-pilot:
  #   image: registry.cn-hangzhou.aliyuncs.com/acs-sample/log-pilot
  #   volumes:
  #       - "/var/run/docker.sock:/var/run/docker.sock"
  #       - "/:/host"
  #   privileged: true
  go:
    container_name: go
    image: golang:1.18
    tty: true
    privileged: true
    # ports:
    #   - "6379:6379"
    # environment:
    #   USERNAME:
    #     from_secret: username
    #   ACCESS_TOKEN:
    #     from_secret: access_token
    # commands:
    #   - go env -w GOPRIVATE=codeup.aliyun.com/$USERNAME
    #   - git config --global url."https://$USERNAME:$ACCESS_TOKEN@codeup.aliyun.com".insteadOf "https://codeup.aliyun.com"
    volumes:
        - "/vagrant:/go"
        - "/opt/.ssh:/tmp/.ssh:z"
networks:
  frontend:
    ipam:
      config:
        - subnet: 172.20.0.0/16
volumes:
  logs:
      driver: local
      driver_opts:
        type: none
        device: /vagrant/logs
        o: bind
  workspace:
    driver: local
    driver_opts:
      type: none
      device: /vagrant/
      o: bind


